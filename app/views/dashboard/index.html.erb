<!DOCTYPE html>
<html>
  <head>
    <style type="text/css">
      html, body, #map-canvas { height: 100%; margin: 0; padding: 0;}
    </style>
    <script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB4u6EYHG6OxEBHORkBbKXUm7OQBySIxr8">
    </script>
    <script type="text/javascript">
      function initialize() {
        var mapOptions = {
          center: { lat: -1.288049, lng: 36.841828},
          zoom: 12
        };
        var myLatlng = new google.maps.LatLng(-1.2137278, 36.8928517);
        var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);
        $.get('/incidents.json', function(data) {
        	$.each(data, function(key, incident){
        		// console.log(city.name);
        		coords = incident.location;
        		console.log(coords)
        		lat = parseFloat(coords.substr(0, coords.indexOf(', ')))
        		lng = parseFloat(coords.substr(coords.indexOf(', ')+2, coords.length))

        		var marker = new google.maps.Marker({
        		    position: new google.maps.LatLng(lat, lng),
        		    map: map,
        		    animation: google.maps.Animation.DROP,
        		    title:"Hello World!"
        		});
        	}
        });
        google.maps.event.addListener(marker, 'click', toggleBounce);
      }

      function toggleBounce() {

        if (marker.getAnimation() != null) {
          marker.setAnimation(null);
        } else {
          marker.setAnimation(google.maps.Animation.BOUNCE);
        }
      }
      google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </head>
  <body>
<div id="map-canvas"></div>
  </body>
</html>

<!-- <div style='width: 800px;'>
<p>hi</p>
  <div id="map" style='width: 1450px; height: 700px;'></div>
</div>

<script type="text/javascript">
	map = {}
	var myIcon = L.icon({
		iconUrl: '/Users/gaagaalee/Projects/Rails/nyumba_kumi/app/assets/images/leaflet/marker-icon.png',
		iconSize: [20, 20],
		iconAnchor: [10, 10],
		labelAnchor: [6, 0] // as I want the label to appear 2px past the icon (10 + 2 - 6)
	});

	//mapping for home, /posts[blog] and /countries pages
	// if($.inArray(window.location.pathname, ['/user', '/users/', '/dashboard', '/posts', '/countries'] > -1)){ 

		// foreach city in the whole hacktrip
		map = L.map('map', {
			scrollWheelZoom: false,
			zoomControl: true,
			doubleClickZoom: true,
			minZoom: 8, 
			maxZoom: 18,
			// attributionControl: false,
			// }).setView([53, 8], 5); 
			}).setView([-1.2876847,36.8215618], 12); 
		var markersgroup = []
			   
		// L.tileLayer('http://{s}.tile.cloudmade.com/5e9427487a6142f7934b07d07a967ba3/997/256/{z}/{x}/{y}.png', {
		// L.tileLayer('http://a.tiles.mapbox.com/v3/techytimo.ic2cif8j/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		  attribution: '© <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
		  maxZoom: 18,
		  opacity: 0.5
		}).addTo(map);
		$.get('/incidents.json', function(data){ //create markers for all cities in country

			$.each(data, function(key, incident){
				// console.log(city.name);
				coords = incident.location;
				console.log(coords)
				lat = parseFloat(coords.substr(0, coords.indexOf(', ')))
				lng = parseFloat(coords.substr(coords.indexOf(', ')+2, coords.length))
				console.log(lat);
				console.log(lng);
				var marker = L.marker([lat, lng], {
							icon: myIcon
							})
							.bindLabel('<a href="/incidents/'+incident.id+'">'
										+incident.incident_type+'</a>', { 
							noHide: true,
							direction: 'auto'
							})
							.addTo(map);
				var popup = L.popup()
				    // .setLatLng(latlng)
				    .setContent('<a href="/incidents/'+incident.id+'">'
				    			+incident.incident_type+'</a><br />'
				    			+'<a href="/events/"></a><br /></p>')
				    .openOn(marker);
				marker.bindPopup(popup)

				marker._icon.onmouseover = function(){
					marker.openPopup()
				}

				markersgroup.push([lat, lng])
				// markersgroup.push(marker.getLatLng())
				// console.log(marker.getLatLng());
			})
			
			// map.fitBounds(markersgroup);
			// setTimeout(function(){ map.panBy([0, -20]); }, 1000)

			// custom parallax effect... 
			pos = 0
			$(window).scroll(function(){ 
				// console.log(pos);
				// console.log($(window).scrollTop());
				// map.panBy([0, -($(window).scrollTop()/10-pos)]);
				// pos = $(window).scrollTop()/10
				map.panBy([0, -($(window).scrollTop()-pos)]);
				pos = $(window).scrollTop()
				// scroll = $(window).scrollTop() > pos ? $(window).scrollTop()-pos : pos - $(window).scrollTop())
				// pos = $(window).scrollTop() > pos ? $(window).scrollTop()-pos : pos - $(window).scrollTop())
			})

		})
		.fail(function() {
			console.log('FAIL');
		})

	// }
</script>

// <script type="text/javascript">
// 	// set up AJAX request
// 	ajaxRequest=getXmlHttpObject();
// 	// if (ajaxRequest==null) {
// 	// 	alert ("This browser does not support HTTP Request");
// 	// 	return;
// 	// }

// 	var map;
// 	var ajaxRequest;
// 	var plotlist;
// 	var plotlayers=[];

// 	function initmap() {
// 	  // set up the map
// 	  map = new L.Map('map');

// 	  // create the tile layer with correct attribution
// 	  var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
// 	  var osmAttrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
// 	  var osm = new L.TileLayer(osmUrl, {minZoom: 8, maxZoom: 18, attribution: osmAttrib});   

// 	  // start the map in Nairobi
// 	  map.setView(new L.LatLng(-1.2876847,36.8215618),12);
// 	  map.addLayer(osm);

// 	  askForPlots();
// 	  map.on('moveend', onMapMove);
// 	}

// 	initmap();

// 	function getXmlHttpObject() {
// 		if (window.XMLHttpRequest) { return new XMLHttpRequest(); }
// 		if (window.ActiveXObject)  { return new ActiveXObject("Microsoft.XMLHTTP"); }
// 		return null;
// 	}

// 	function askForPlots() {
// 		// request the marker info with AJAX for the current bounds
// 		var bounds=map.getBounds();
// 		var minll=bounds.getSouthWest();
// 		var maxll=bounds.getNorthEast();
// 		var msg='leaflet/findbybbox.cgi?format=leaflet&bbox=1.2437072,36.8449936,1.2437072,36.8449936';
// 		ajaxRequest.onreadystatechange = stateChanged;
// 		ajaxRequest.open('GET', msg, true);
// 		ajaxRequest.send(null);
// 	}

// 	function stateChanged() {
// 		// if AJAX returned a list of markers, add them to the map
// 		if (ajaxRequest.readyState==4) {
// 			//use the info here that was returned
// 			if (ajaxRequest.status==200) {
// 				plotlist=eval("(" + ajaxRequest.responseText + ")");
// 				removeMarkers();
// 				for (i=0;i<plotlist.length;i++) {
// 					var plotll = new L.LatLng(plotlist[i].lat,plotlist[i].lon, true);
// 					var plotmark = new L.Marker(plotll);
// 					plotmark.data=plotlist[i];
// 					map.addLayer(plotmark);
// 					plotmark.bindPopup("<h3>"+plotlist[i].name+"</h3>"+plotlist[i].details);
// 					plotlayers.push(plotmark);
// 				}
// 			}
// 		}
// 	}

// 	function removeMarkers() {
// 		for (i=0;i<plotlayers.length;i++) {
// 			map.removeLayer(plotlayers[i]);
// 		}
// 		plotlayers=[];
// 	}

// 	function onMapMove(e) { askForPlots(); }
// </script> -->